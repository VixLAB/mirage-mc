{"version":3,"file":"static/js/841.a72cc059.chunk.js","mappings":"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","sources":["components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","components/FilterPanel/CusAutocomplete.js","components/ListboxComponent/index.js","components/FilterPanel/SelectionWithOption.js","components/FilterPanel/index.js","components/FontsizeControl/index.js","components/LegendPanel/index.js","containers/LayoutContainer/theme.js"],"sourcesContent":["import canvasToImage from 'canvas-to-image';\nimport {select} from 'd3';\n\nconst exportAsImage = async (el, imageFileName) => {\n    // htmlToImage.toPng(el,{ cacheBust: true, })\n    //     .then(function (dataUrl) {\n    //         debugger\n    //         downloadImage(dataUrl, imageFileName);\n    //     });\n    // htmlToImage.toPng(select(el).select('canvas').node())\n    //     .then(function (dataUrl) {\n    //         var img = new Image();\n    //         img.crossOrigin = \"Anonymous\";\n    //         img.src = dataUrl;\n    //         document.body.appendChild(img);\n    //     })\n    //     .catch(function (error) {\n    //         console.error('oops, something went wrong!', error);\n    //     });\n    const renderer = el.renderer();\n    const scene = el.scene();\n    const camera = el.camera();\n    renderer.render(scene,camera);\n    const blob = renderer.domElement.toDataURL();\n    downloadImage(blob, imageFileName)\n    // const canvas = select(el).select('canvas').node();\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\n    // const capturedImage = videocanvas.toDataURL();\n    // canvasToImage(canvas, {\n    //     name: 'myImage',\n    //     type: 'jpg',\n    //     quality: 0.7\n    // });\n};\n\nconst downloadImage = (blob, fileName) => {\n    const fakeLink = window.document.createElement(\"a\");\n    fakeLink.style = \"display:none;\";\n    fakeLink.download = fileName;\n\n    fakeLink.href = blob;\n\n    document.body.appendChild(fakeLink);\n    fakeLink.click();\n    document.body.removeChild(fakeLink);\n\n    fakeLink.remove();\n};\nexport default exportAsImage;\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\nimport earthNight from '../../assets/earth-night.jpg'\nimport earthDay from '../../assets/earth-blue-marble.jpg'\nimport Globe from 'react-globe.gl'\nimport * as d3 from 'd3'\nimport './index.css'\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardContent,\n    IconButton,\n    Portal,\n    Stack,\n    ToggleButton,\n    Typography\n} from \"@mui/material\";\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport exportAsImage from \"./htm2image\";\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport AddIcon from '@mui/icons-material/Add';\nimport {alpha} from \"@mui/material/styles\";\nimport { useTheme } from '@mui/material/styles';\n\n\nexport const TOP = 20;\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\n\n\n\n\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend,getSwitchView, zoomLoc, toolbarRef} , ref) => {\n    const globeEl = useRef();\n    const holderRef = useRef();\n    const [colorKey, setColorKey] = useState('country');\n    const [selectPoint, setSelectPoint] = useState();\n    const [currentSequnce,setCurrentSequnce] = useState(0);\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\n    const [ringData,setRingData] = useState([]);\n    const [contriesMap,setcontriesMap] = useState({});\n    const theme = useTheme();\n    const colorsCategory = useMemo(()=>{\n        return function(otherColor=\"#ececec\"){\n            const scale = d3.scaleOrdinal(colorArr);\n            let master = (val)=>{\n                if ((!val)||(val==='')||(val.trim===''))\n                    return 'black'\n                const domain = scale.domain();\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\n                    return scale(val);\n                else\n                    return otherColor\n            };\n            master.domain = scale.domain;\n            master.range = scale.range;\n            return master;\n        }();\n    },[]);\n\n    function handleData({locs,countries}) {\n        console.log(locs,countries)\n        const contriesMap = {};\n        const range = d3.extent(locs, d => d?.count);\n        \n        arcThickScale.domain(range);\n        labelScale.domain(range);\n\n        countriesScale.domain(d3.extent(countries, d => {\n            contriesMap[d.title] = d;\n            return d?.count\n        }));\n\n        //color\n        colorsCategory.domain([]).range(colorArr);\n        countries.forEach(d=>colorsCategory(d.title));\n\n        let order = 0;\n        if (countries.length>3)\n        [0,1,2,3,0].forEach(i=> {\n            if (!MAP_CENTERs[order])\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\n            MAP_CENTERs[order].lat = countries[i].lat;\n            MAP_CENTERs[order].lng = countries[i].long;\n            order++\n        });\n\n        \n        return {MAP_CENTERs,contriesMap};\n    }\n    useEffect(() => {\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\n        setcontriesMap(contriesMap)\n        setMAP_CENTERs(MAP_CENTERs);\n        if (!zoomLoc)\n            setCurrentSequnce(0);\n    }, [locs,countries]);\n\n    const [timer,setTimer] = useState(null);\n    useEffect(()=>{\n        if (globeEl.current) {\n            if (currentSequnce < MAP_CENTERs.length) {\n\n                const interval = setTimeout(() => {\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\n                    setCurrentSequnce(currentSequnce + 1);\n                }, 4000);\n                setTimer(interval);\n                return () => {\n                    clearInterval(interval);\n                };\n            }\n        }\n    },[currentSequnce,MAP_CENTERs])\n    const stopPlay = useCallback(()=>{\n        if (timer)\n            clearInterval(timer);\n        setCurrentSequnce(MAP_CENTERs.length);\n    },[timer]);\n\n    const [timerRing,setTimerRing] = useState(null);\n    const zoomTo = useCallback((lng,lat)=>{\n        if (globeEl.current) {\n            stopPlay();\n            globeEl.current.pointOfView({ lat, lng, altitude:2 }, 2000);\n            setRingData([{lng,lat}]);\n            if (timerRing)\n                clearInterval(timerRing);\n            let interval = setTimeout(() => {\n                setRingData([])\n            }, 10000);\n            setTimerRing(interval);\n        }\n    },[currentSequnce,stopPlay,timerRing])\n    useEffect(()=>{\n        if (zoomLoc)\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\n        return () => {\n            if (timerRing)\n                clearInterval(timerRing);\n        };\n    },[zoomLoc])\n\n    const onSaveImage = useCallback(() => {\n        exportAsImage(globeEl.current,'MIRAGE-mc');\n    },[holderRef,globeEl]);\n\n    useEffect(()=>{\n        onSelectLegend('selectCountry',(d)=>{\n            onSelect({country:[d['title']]});\n            zoomTo(d.long,d.lat);\n        })\n    },[zoomTo,onSelect])\n\n    const zoomIn = useCallback(()=>{\n        if (globeEl.current) {\n            const loc = {...globeEl.current.pointOfView()}\n            loc.altitude = loc.altitude/2\n            globeEl.current.pointOfView(loc,2000)\n        }\n    },[globeEl])\n    const zoomOut = useCallback(()=>{\n        if (globeEl.current) {\n            const loc = {...globeEl.current.pointOfView()}\n            loc.altitude = loc.altitude*2\n            globeEl.current.pointOfView(loc,2000)\n        }\n    },[globeEl])\n\n    return  <div\n        style={{\n            background: \"#ffffff\",\n            position: \"relative\"\n        }}\n    >\n        <div ref={holderRef}\n             style={{\n            // transform: \"translate(0, -20vh)\",\n            //      marginTop:'-20vh',\n            // height: '120vh'\n\n        }}>\n            <Globe\n                width={width}\n                // height={height*1.2}\n                height={height}\n                ref={globeEl}\n                globeImageUrl={(theme.palette.mode==='dark')?earthNight:earthDay}\n                backgroundColor={(theme.palette.mode==='dark')?'black':'#7ec7f6'}\n                showAtmosphere={true}\n                ringsData={ringData}\n                ringColor={()=>'#D39F49'}\n                ringResolution={1000}\n                ringMaxRadius={5}\n                ringPropagationSpeed={5}\n                ringRepeatPeriod={500}\n\n                labelsData={countries}\n                labelLat={useCallback(d => d.lat,[])}\n                labelLng={useCallback(d => d.long,[])}\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\n                labelText={useCallback(d => d['title'],[])}\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\n                labelDotRadius={0}\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\n                labelResolution={2}\n\n                hexBinPointsData={locs}\n                hexBinPointWeight=\"count\"\n                hexBinPointLng={useCallback(d => d.long,[])}\n                hexBinPointLat={useCallback(d => d.lat,[])}\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\n                hexBinResolution={4}\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\n                hexBinMerge={false}\n                onHexHover ={useCallback((hex)=>{if (hex){\n                    setSelectPoint(hex.points[0])\n                }else\n                    setSelectPoint(undefined);\n                },[])}\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\n            <div class=\"overlay-header\">\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\n            </div>\n            <div class=\"overlay-content\">\n            <table>\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\n            </table>\n            </div>\n          </div>`},[])}\n                onHexClick={(d)=>{\n                    const city = [];\n                    d.points.forEach(d => {\n                        debugger\n                        city.push(d.city)\n                    })\n                    onSelect({city,country:[d.points[0]?.country]});\n                }\n                }\n                onGlobeClick={stopPlay}\n            />\n        </div>\n        {/*{toolbarRef&&<Portal container={toolbarRef.current}>*/}\n        {/*    <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>*/}\n        {/*</Portal>}*/}\n        <Stack sx={{position:'absolute',right:0,top:0,margin:1}} direction={\"row\"}>\n            <div><ToggleButton\n                value=\"check\"\n                selected={getSwitchView()}\n                onChange={() => {\n                    const current = getSwitchView();\n                    getSwitchView(!current);\n                }}\n            >\n                {getSwitchView()?'All Data':'Reviewed Data'}\n            </ToggleButton>\n            </div>\n            <ButtonGroup\n                orientation=\"vertical\"\n                aria-label=\"map tool\"\n                variant={\"contained\"}\n                sx={{\n                    // backgroundColor: theme=>alpha(theme.palette.common.white, 0.15),\n                    '& button':{\n                        padding:1,\n                        // '&:hover': {\n                        //     backgroundColor: theme=>alpha(theme.palette.common.white, 0.25),\n                        // }\n                }}}\n            >\n\n                <Button onClick={onSaveImage}><SaveIcon/></Button>\n                <Button onClick={zoomIn}><AddIcon/></Button>\n                <Button onClick={zoomOut}><RemoveIcon/></Button>\n            </ButtonGroup>\n        </Stack>\n    </div>;\n})\n\nexport default Earth3D;\n","import moment from \"moment/moment\";\nimport {Checkbox} from \"@mui/material\";\nimport EventOutIcon from '@mui/icons-material/ShoppingCartCheckout';\nimport EventIcon from '@mui/icons-material/ShoppingCart';\nexport const fields = [\n    {\n        id: 'inBasket',\n        header: 'Selected',\n        accessorKey: 'inBasket',\n        // size: 50,\n        Cell: ({ renderedCellValue, row }) => (\n            <Checkbox\n                disabled\n                size={\"small\"}\n                icon={<EventOutIcon />}\n                checkedIcon={<EventIcon color={'secondary'}/>}\n                checked={row.original.inBasket}\n            />\n        ),\n        size: 50,\n        minSize: 50,\n        filterDisable:true,\n    },\n    {\n        accessorKey: 'city',\n        header: 'City',\n    },\n    {\n        accessorKey: 'country',\n        header: 'Country',\n    },\n    {\n        accessorKey: 'station',\n        header: 'Station',\n        filterDisable:true\n    },\n    {\n        accessorKey: 'station_genre',\n        header: 'Station Genre',\n        Cell: ({ renderedCellValue, row }) => (\n            <>{(renderedCellValue??[]).join(', ')}</>\n        ),\n    },\n    {\n        accessorKey: 'artist_name',\n        header: 'Artist',\n        dynamic:true,\n    },\n    {\n        accessorKey: 'track_name',\n        header: 'Song',\n        dynamic:true,\n    }\n    // ,\n    // {\n    //     accessorKey: 'time_station',\n    //     header: 'Time',\n    //     type:'time',\n    //     filterDisable:true,\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\n    // }\n];\nexport const fieldsWithoutSelected = fields.filter((d,i)=>i);\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React from \"react\";\nimport {Autocomplete} from \"@mui/material\";\nexport default function CusAutocomplete ({onInputChange=()=>{},...props}) {\n    const [input, setInput] = React.useState('');\n    return <Autocomplete\n        inputValue={input}\n        onInputChange={(event,newValue,reason)=> {\n            setInput(newValue);\n            onInputChange(event,newValue,reason)\n        }}\n        onBlur={()=>{setInput('')}}\n        {...props}\n    />\n}","import React, {useRef} from \"react\";\nimport { ViewportList } from 'react-viewport-list';\n\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\n    props,\n    ref\n) {\n    const { children, role, ...other } = props;\n    const Row = ({props,type:Type}) => {\n        return <Type {...props} key={props.id}/>\n    }\n    const itemCount = Array.isArray(children) ? children.length : 0;\n    const viewboxRef = useRef(null)\n    return (\n        <div ref={ref} role={role} >\n            <div {...other} ref={viewboxRef}>\n                    <ViewportList\n                        viewportRef={viewboxRef}\n                        items={children}\n                        count={itemCount}\n                    >\n                        {Row}\n                    </ViewportList>\n                {/*<List*/}\n                {/*    height={250}*/}\n                {/*    width={300}*/}\n                {/*    rowHeight={itemSize}*/}\n                {/*    overscanCount={5}*/}\n                {/*    rowCount={itemCount}*/}\n                {/*    rowRenderer={props => {*/}\n                {/*        return React.cloneElement(children[props.index], {*/}\n                {/*            style: props.style*/}\n                {/*        });*/}\n                {/*    }}*/}\n                {/*    role={role}*/}\n                {/*/>*/}\n            </div>\n        </div>\n    );\n});\n\nexport default ListboxComponent;","import React, { useEffect } from \"react\";\nimport {Stack, MenuItem, Select,FormControl, TextField, IconButton} from \"@mui/material\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport CusAutocomplete from \"./CusAutocomplete\";\nimport ListboxComponent from \"../ListboxComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    setFilter,\n    deleteFilter,\n    selectFilters\n} from \"../../reducer/streamfilters\";\n\nconst emptyArray = [];\nconst emptyObj = {};\nconst emptyFunc = ()=>{};\nexport default function SelectionWithOption({options=emptyArray,\n    enabled=emptyObj,  filterOptionsFunc,\n    cat='',\n    filterOptions,searchByStream,\n    getList, isLoading, logEvents}) {\n    const [f, setF] = React.useState({});\n    const dispatch = useDispatch();\n    const filters = useSelector(selectFilters);\n\n    useEffect(()=>{\n        if (cat!=='')\n            setF(options.find(d=>d.accessorKey===cat));\n    },[cat])\n\n    const handleChange = (event) => {\n        dispatch(setFilter({key:event.target.value,value:[],prekey:cat}));\n    };\n\n    const onDelete = () =>{\n        dispatch(deleteFilter({key:cat}));\n    }\n    return <React.Fragment>\n    <Stack direction={\"row\"}>\n    <FormControl sx={{ minWidth: 120 }}>\n        <Select\n          value={cat}\n          onChange={handleChange}\n          size=\"small\"\n        >\n            {options.map((d)=><MenuItem value={d.accessorKey} key={d.accessorKey} disabled={enabled[d.accessorKey]}>\n                {d.header}\n                </MenuItem>)\n            }\n        </Select>\n      </FormControl>\n      <CusAutocomplete\n            fullWidth\n            key={f.accessorKey}\n            multiple\n            size=\"small\"\n            limitTags={2}\n            filterOptions={filterOptionsFunc}\n            ListboxComponent={ListboxComponent}\n            freeSolo\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\n            getOptionLabel={(d) => d}\n            value={filters[f.accessorKey]??[]}\n            onChange={(event, value) => {\n                if (value!=='' && value && value.length)\n                    logEvents('search',{'search_term':value,key:f.accessorKey,})\n                dispatch(setFilter({key:f.accessorKey,value}));\n            }}\n            onInputChange={f.dynamic?((event, newInputValue) => {\n                if (newInputValue&&newInputValue!=='')\n                    searchByStream(f.accessorKey,newInputValue);\n            }):undefined}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    // label={f.header}\n                />\n            )}\n        />\n        <IconButton aria-label=\"close\" size=\"small\" onClick={onDelete}>\n            <CancelIcon fontSize=\"inherit\" />\n        </IconButton>\n    </Stack>\n    </React.Fragment>\n}","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    setFilter,\n    selectFiltersList,\n    selectHasEmpty\n} from \"../../reducer/streamfilters\";\nimport { ActionCreators } from \"redux-undo\";\nimport {Button, createFilterOptions, Stack, TextField} from \"@mui/material\";\nimport {filterSearch} from \"../EventTable/fields\";\nimport {useDatabase} from \"../../Providers/Database\";\nimport {useLog} from \"../../Providers/Firebase\";\nimport SelectionWithOption from \"./SelectionWithOption\";\n\nconst OPTIONS_LIMIT = 50;\nconst defaultFilterOptions = createFilterOptions();\n\nconst filterOptionsFunc = (options, state) => {\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\n};\n\n\nexport default function FilterPanel() {\n    const [filterOptions,setFilterOptions] = useState({});\n    const {isLoading,searchByStream,getList} = useDatabase();\n    const [categoryOption,setCategoryOption] = useState({});\n    const categoryOptionList = useSelector(selectFiltersList);\n    const hasEmpty = useSelector(selectHasEmpty);\n    const dispatch = useDispatch();\n\n    const {logEvents} = useLog();\n    useEffect(()=>{\n        const obj = {};\n        categoryOptionList.forEach(element => {\n            obj[element] = true;\n        });\n        setCategoryOption(obj);\n    },[categoryOptionList])\n    // useEffect(()=>{\n    //     if (!Object.keys(filters).length) {\n    //         // const newfilters = {};\n    //         // filterSearch.forEach(f=>{\n    //         //     newfilters[f.accessorKey] = null;\n    //         // })\n    //         // dispatch(setFilters({value: newfilters}));\n    //         ActionCreators.clearHistory();\n    //     }\n    // },[]);\n    const fields = getList('fields');\n\n    useEffect(()=>{\n        setFilterOptions({...fields});\n    },[fields])\n    return <Stack spacing={2} padding={2}>\n        {categoryOptionList.map((d,i)=><SelectionWithOption \n            key={i}\n            order={i}\n            cat={d}\n            options={filterSearch} \n            enabled={categoryOption}\n            getList={getList}\n            filterOptionsFunc={filterOptionsFunc}\n            filterOptions={filterOptions}\n            isLoading={isLoading}\n            logEvents={logEvents}\n            searchByStream={searchByStream}\n        />)}\n        {(categoryOptionList.length<filterSearch.length)&&<Button \n            variant=\"contained\"\n            disabled={hasEmpty}\n            onClick={()=>{\n                debugger\n                dispatch(setFilter({key:''}));\n            }}\n        >\n            Add filter\n        </Button>}\n        {/* {filterSearch.map(f=><CusAutocomplete\n            key={f.accessorKey}\n            multiple\n            size=\"small\"\n            limitTags={2}\n            filterOptions={filterOptionsFunc}\n            ListboxComponent={ListboxComponent}\n            freeSolo\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\n            getOptionLabel={(d) => d}\n            value={filters[f.accessorKey]??[]}\n            onChange={(event, value) => {\n                if (value!=='' && value && value.length)\n                    logEvents('search',{'search_term':value,key:f.accessorKey,})\n                dispatch(setFilter({key:f.accessorKey,value}));\n            }}\n            onInputChange={f.dynamic?((event, newInputValue) => {\n                if (newInputValue&&newInputValue!=='')\n                    searchByStream(f.accessorKey,newInputValue);\n            }):undefined}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={f.header}\n                />\n            )}\n        />)} */}\n        {/*<TimeRangePicker*/}\n        {/*    fromVal={(filters[\"time_station\"]?.from)??null}*/}\n        {/*    toVal={(filters[\"time_station\"]?.to)??null}*/}\n        {/*    onChange={(key,value) => {*/}\n        {/*        const val = {...(filters[\"time_station\"] ?? {})};*/}\n        {/*        if (value)*/}\n        {/*            val[key] = value;*/}\n        {/*        else*/}\n        {/*            delete val[key];*/}\n        {/*        dispatch(setFilter({key:\"time_station\",value:val}));*/}\n        {/*    }}*/}\n        {/*/>*/}\n    </Stack>\n}","import {ButtonGroup, Button, Stack} from \"@mui/material\";\nimport {Add as AddIcon, Remove as RemoveIcon} from '@mui/icons-material';\n\nexport default function FontsizeControl({title,onChange}) {\n    return<Stack direction={\"row\"} alignItems={'center'} justifyContent={'space-between'}>\n        {title}\n        <ButtonGroup size=\"small\" variant=\"outlined\" aria-label=\"outlined button group\"  sx={{color:\"unset\"}}>\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(true)}>\n            <AddIcon/>\n        </Button>\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(false)}>\n            <RemoveIcon/>\n        </Button>\n    </ButtonGroup>\n    </Stack>\n}","import React, {useEffect, useMemo, useState} from \"react\";\nimport {\n    Card,\n    Stack,\n    Typography,\n    Unstable_Grid2 as Grid\n} from \"@mui/material\";\nimport {useDatabase} from \"../../Providers/Database\";\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\nimport {scaleLinear, scaleOrdinal, extent} from \"d3\";\nimport {colorArr, TOP} from \"../Earth\";\n\n\n// const countriesScale = scaleLinear().range([0.1,1]);\n\nexport default function FilterPanel({countries,fullHeight}) {\n    const {getFuncCollection,getList} = useDatabase();\n    // const countries = getList('countries');\n    const countriesScale = useMemo(()=>{\n        return scaleLinear().range([0.1,1]).domain(extent(countries, d => {\n            return d?.count\n        }))\n    },[countries]);\n    const colorsCategory = useMemo(()=>{\n        return function(otherColor=\"#ececec\"){\n            const scale = scaleOrdinal(colorArr);\n            let master = (val)=>{\n                if ((!val)||(val==='')||(val.trim===''))\n                    return 'black'\n                const domain = scale.domain();\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\n                    return scale(val);\n                else\n                    return otherColor\n            };\n            master.domain = scale.domain;\n            master.range = scale.range;\n            return master;\n        }();\n    },[countries]);\n\n    return <Grid >\n            <Stack\n                m={1}\n                style={{\n                    maxHeight:fullHeight?null:'30vh',\n                    overflowY:'auto'\n                }}\n            >\n                <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\n                    <Stack sx={{m:1,p:0}}>\n                        <Typography>Top Stations by Country</Typography>\n                        {\n                            countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {\n                                getFuncCollection('selectCountry')(d)\n                            }}>\n                                <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}\n                            </Typography>)\n                        }\n                    </Stack>\n                </Card>\n            </Stack>\n        </Grid>\n}","import { createTheme } from '@mui/material/styles'\nimport {color as d3color} from \"d3\";\n\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\n    if (ts) {\n        for (let i = 0; i < ts.length; i++) {\n            if (ts[i]['id'] === id) {\n                const _source = ts[i]['source']\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\n                const palette = source != null ? source.palette : {}\n                return createTheme({\n                    ...source,\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\n                    direction: isRTL ? 'rtl' : 'ltr',\n                })\n            }\n        }\n    }\n\n    return createTheme({\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\n        direction: isRTL ? 'rtl' : 'ltr',\n    })\n}\n\nexport default getThemeSource;\n\nexport function semicolor(_color){\n    const color = d3color(_color);\n    color.opacity = 0.5\n    return color.toString();\n}"],"names":["exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","width","height","onSelect","onSelectLegend","getSwitchView","zoomLoc","globeEl","toolbarRef","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","theme","useTheme","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","console","log","contriesMap","count","title","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","zoomIn","loc","_objectSpread","zoomOut","_jsxs","background","position","children","_jsx","Globe","globeImageUrl","palette","mode","earthNight","earthDay","backgroundColor","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","Stack","sx","right","top","margin","direction","ToggleButton","value","selected","onChange","ButtonGroup","orientation","variant","padding","Button","onClick","SaveIcon","AddIcon","RemoveIcon","fields","id","header","accessorKey","Cell","renderedCellValue","row","Checkbox","disabled","size","icon","EventOutIcon","checkedIcon","EventIcon","checked","original","inBasket","minSize","filterDisable","_Fragment","dynamic","fieldsWithoutSelected","filter","filterSearch","f","CusAutocomplete","_ref$onInputChange","onInputChange","props","_objectWithoutProperties","_excluded","_React$useState","React","_React$useState2","input","setInput","Autocomplete","inputValue","event","newValue","reason","onBlur","role","other","itemCount","Array","isArray","viewboxRef","ViewportList","viewportRef","items","Type","type","_createElement","key","emptyArray","emptyObj","SelectionWithOption","_filters$f$accessorKe","_ref$options","options","_ref$enabled","enabled","filterOptionsFunc","_ref$cat","cat","filterOptions","searchByStream","getList","isLoading","logEvents","setF","dispatch","useDispatch","filters","useSelector","selectFilters","FormControl","minWidth","Select","setFilter","target","prekey","MenuItem","fullWidth","multiple","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","newInputValue","renderInput","params","TextField","IconButton","deleteFilter","CancelIcon","fontSize","defaultFilterOptions","createFilterOptions","state","FilterPanel","setFilterOptions","_useDatabase","useDatabase","categoryOption","setCategoryOption","categoryOptionList","selectFiltersList","hasEmpty","selectHasEmpty","useLog","obj","element","spacing","FontsizeControl","alignItems","justifyContent","fullHeight","getFuncCollection","scaleLinear","extent","scaleOrdinal","Grid","m","maxHeight","overflowY","Card","pointerEvents","semicolor","paper","p","Typography","_countriesScale","display","marginRight","_color","d3color","opacity","toString","ts","isDarkMode","isRTL","_source","source","Function","createTheme"],"sourceRoot":""}